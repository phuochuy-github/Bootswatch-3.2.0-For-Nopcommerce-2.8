@model NewsItemModel
@using Nop.Web.Models.News;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(Model.Title);
}
<div class="page news-item-page">
    <div class="page-title">
        <h1>@Model.Title</h1>
    </div>
    <div class="clear">
    </div>
    <div class="page-body">
        <div class="news-date">
            <p>@Model.CreatedOn.ToString("D")</p>
        </div>
        @Html.Widget("newsitem_page_before_body")
        <div class="news-body">
            @Html.Raw(Model.Full)
        </div>
        @Html.Widget("newsitem_page_before_comments")
        @if (Model.AllowComments)
        {
            <div class="clear">
            </div>
            <fieldset class="new-comment">
                <legend class="title">@T("News.Comments.LeaveYourComment")</legend>
                @using (Html.BeginForm())
                {
                    <div>
                        <div class="message-error">@Html.ValidationSummary(true)</div>
                        @{
                    string result = TempData["nop.news.addcomment.result"] as string;
                        }
                        @if (!String.IsNullOrEmpty(result))
                        {
                            <div class="result">@result</div>
                        }
                        <div class="row">
                            <div class="col-xs-12 col-sm-6">
                                <div class="forms-box">
                                    <div class="inputs form-group">
                                        @Html.LabelFor(model => model.AddNewComment.CommentTitle)
                                        <div class="input-box">
                                            @Html.TextBoxFor(model => model.AddNewComment.CommentTitle, new { @class = "comment-title form-control" })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.AddNewComment.CommentTitle, null, new { @class="label label-danger" })
                                    </div>
                                    <div class="inputs form-group">
                                        @Html.LabelFor(model => model.AddNewComment.CommentText)
                                        <div class="input-box">
                                            @Html.TextAreaFor(model => model.AddNewComment.CommentText, new { @class = "comment-text form-control", rows=8 })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.AddNewComment.CommentText, null, new { @class="label label-danger" })
                                    </div>
                                    @if (Model.AddNewComment.DisplayCaptcha)
                                    {
                                        <div class="captcha-box">
                                            @Html.Raw(Html.GenerateCaptcha())
                                        </div>
                                        <div class="clear">
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        
                        <div class="clear">
                        </div>
                        <div class="buttons">
                            <input type="submit" name="add-comment" class="btn btn-success btn-sm news-item-add-comment-button" value="@T("News.Comments.SubmitButton")" />
                        </div>
                    </div>
                }
            </fieldset>
                if (Model.Comments.Count > 0)
                {
            <div class="clear">
            </div>
            <div class="comment-list">
                <div class="title">
                    @T("News.Comments")
                </div>
                <div class="clear">
                </div>
                @foreach (var comment in Model.Comments)
                {
                    <div class="news-comment">
                        <div class="comment-info">
                            <div class="user-info">
                                @if (comment.AllowViewingProfiles)
                                {
                                    <a href="@Url.RouteUrl("CustomerProfile", new { id = comment.CustomerId })" class="username">@(comment.CustomerName)</a>
                                }
                                else
                                {
                                    <span class="username">@(comment.CustomerName)</span>
                                }
                                <div class="avatar">
                                    @if (!String.IsNullOrEmpty(comment.CustomerAvatarUrl))
                                    {
                                        <img src="@(comment.CustomerAvatarUrl)" class="avatar-img" title="avatar" alt="avatar" />
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="comment-content">
                            <div class="comment-time">
                                @T("News.Comments.CreatedOn"): <span class="stat-value">@comment.CreatedOn.ToString("g")</span>
                            </div>
                            <div class="comment-title">
                                <span class="comment-text">@comment.CommentTitle</span>
                            </div>
                            <div class="comment-body">
                                <span class="comment-text">@Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(comment.CommentText, false, true, false, false, false, false))</span>
                            </div>
                        </div>
                        @Html.Widget("newsitem_page_inside_comment")
                    </div>
                    <div class="clear">
                    </div>
                }
            </div>
                }
        }
        @Html.Widget("newsitem_page_after_comments")
    </div>
</div>
