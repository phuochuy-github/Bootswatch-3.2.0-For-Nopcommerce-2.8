@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }
}
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
@*category breadcrumb*@
@if (Model.DisplayCategoryBreadcrumb)
{
    <div >
        <ul class="breadcrumb">
            <li><a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
            </li>
            @foreach (var cat in Model.CategoryBreadcrumb)
            {
                var isLastCategory = cat.Id == Model.Id;
                <li>
                    @if (isLastCategory)
                    {
                        @*uncomment to disable clickable link
                        <strong>@cat.Name</strong>*@
                        <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                    }
                    else
                    {
                        <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                    }
                </li>
            }
        </ul>
    </div>
    <div class="clear">
    </div>
    @Html.Widget("categorydetails_after_breadcrumb")
}
<style>
    .form-inline .form-group{
        margin-right: 10px;
    }
</style>
<div class="page category-page">
    @*uncomment to display title
    <div class="page-title">
        <h1>@Model.Name</h1>
    </div>
    <div class="clear">
    </div>*@
    <div class="page-body">
        @Html.Widget("categorydetails_top")
        @*description*@
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="category-description">
                @Html.Raw(Model.Description)
            </div>
            <div class="clear">
            </div>
        }
        @Html.Widget("categorydetails_before_subcategories")
        @*subcategories*@
        @if (Model.SubCategories.Count > 0)
        {
            
                foreach (var item in Model.SubCategories)
                {
                      <div class="col-sm-6 col-md-4 text-center">
                        <div class="thumbnail">
                          <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                          <div class="caption">
                            <h3><a href="@Url.RouteUrl("Category", new {SeName = item.SeName})" title="@item.PictureModel.Title">@item.Name</a></h3>
                          </div>
                        </div>
                      </div>
                    
                }
            <div class="clear">
            </div>
        }
        @Html.Widget("categorydetails_before_featured_products")
        @*featured products*@
        @if (Model.FeaturedProducts.Count > 0)
        {
            <div class="product-grid featured-product-grid">
                <div class="title">
                    @T("Products.FeaturedProducts")
                </div>
                <div>
                    @foreach (var item in Model.FeaturedProducts)
                    {
                        <div class="item-box">
                            @Html.Partial("_ProductBox", item)
                        </div>
                    }
                </div>
            </div>
            
            <div class="clear">
            </div>
        }
        @Html.Widget("categorydetails_after_featured_products")
        <div class="form-inline" role="form">
          <div class="form-group">
              @*view mode*@
              @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                {
                    <span>@T("Categories.ViewMode")</span>
                    @Html.DropDownList("products-viewmode", Model.PagingFilteringContext.AvailableViewModes, new { onchange = "setLocation(this.value);" })
                    
                }
          </div>
          <div class="form-group">
            @*sorting*@
            @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
            {
                 <span>@T("Categories.OrderBy")</span>
                 @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
            }
          </div>
          <div class="form-group">
            @*page size*@
            @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
            {
                <span>@T("Categories.PageSize")</span> <span>@Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { onchange = "setLocation(this.value);" })</span>
                <span>@T("Categories.PageSize.PerPage")</span>
            }
          </div>
            
          <div class="form-group">
                @Html.Widget("categorydetails_before_filters")
                @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
                {
                    @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
                    
                }
                @*filtering*@
                @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
                {
                    @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
                }
          </div>
        </div>
        <div class="clear">
        </div>
        <p></p><p></p><p></p>
        @Html.Widget("categorydetails_before_product_list")
        @*product list*@
        @if (Model.Products.Count > 0)
        {
            if (Model.PagingFilteringContext.ViewMode == "list")
            {
            @*list mode*@
            <div class="product-list">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @Html.Partial("_ProductBox", product)
                    </div>
                }
            </div>       
            }
            else
            {
            @*grid mode*@
            <div class="product-grid">
               @foreach (var product in Model.Products)
               {
                   <div class="item-box">
                       @Html.Partial("_ProductBox", product)
                   </div>
               }
            </div>
            }
        }
        <div class="clear">
        </div>
        <div class="pager">
            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
        </div>
        @Html.Widget("categorydetails_bottom")
    </div>
</div>
