@model EstimateShippingModel
@using Nop.Web.Models.ShoppingCart;
@if (Model.Enabled)
{
    <div class="shipping">
        <script type="text/javascript">
            $(function () {
                $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
             var selectedItem = $(this).val();
             var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var estimateProgress = $("#estimate-shipping-loading-progress");
                estimateProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addEmptyStateIfRequired": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        estimateProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        estimateProgress.hide();
                    }
                });
            });
     });
        </script>
        
        <div class="estimate-shipping">
            <div class="title">
                <strong>@T("ShoppingCart.EstimateShipping")</strong>
            </div>
            <div class="hint">@T("ShoppingCart.EstimateShipping.Tooltip")</div>
            <div class="shipping-options">
                
                  <div class="form-group">
                    @Html.LabelFor(model => model.CountryId)
                    @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries, new { @class = "country-input form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.CountryId)
                  </div>
                  <div class="form-group">
                      @Html.LabelFor(model => model.StateProvinceId)
                      @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates, new { @class = "state-input form-control input-sm" })
                      <span id="estimate-shipping-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")"</span>
                      @Html.ValidationMessageFor(model => model.StateProvinceId)
                  </div>
                  <div class="form-group">
                      @Html.LabelFor(model => model.ZipPostalCode)
                      @Html.TextBoxFor(model => model.ZipPostalCode, new { @class = "zip-input form-control input-sm" })
                      @Html.ValidationMessageFor(model => model.ZipPostalCode)
                  </div>
                  <div class="form-group">
                      <input type="submit" name="estimateshipping" value="@T("ShoppingCart.EstimateShipping.Button")" class="btn btn-sm estimate-shipping-button" />
                  </div>
                <div class="clear">
                </div>
                <div>
                    @foreach (var shippingOption in Model.ShippingOptions)
                    {
                        <div class="shipping-option-item">
                            <div class="option-name">
                                @shippingOption.Name (@shippingOption.Price)
                            </div>
                            <div class="option-description">
                                @Html.Raw(shippingOption.Description)
                            </div>
                        </div>
                    }
                </div>
                <div class="clear">
                </div>
                @if (Model.Warnings.Count > 0)
                {
                    <div class="message-error">
                        <ul>
                            @for (int i = 0; i < Model.Warnings.Count; i++)
                            {
                                <li>@Model.Warnings[i]</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>
}