@model NewsletterBoxModel
@using Nop.Web.Models.Newsletter;
<div class="panel panel-default">
    <div class="panel-heading"><strong>@T("Newsletter.Title")</strong></div>
    <div class="panel-body">
            @T("Newsletter.Subscribe"):
            @Html.TextBoxFor(x => x.NewsletterEmail, new { id = "newsletter-email", @class="form-control input-sm" })
            @Html.ValidationMessageFor(x => x.NewsletterEmail, null, new { @class="label label-danger" })
            <div class="buttons" style="margin-top: 5px;">
                <input type="button" value="@T("Newsletter.Button")" id="newsletter-subscribe-button" class="btn btn-sm newsletter-subscribe-button" />
                <span id="subscribe-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
            </div>
            <div class="clear">
            </div>
            <div id="newsletter-result-block">
            </div>
    </div>
</div>
<script type="text/javascript">
        $(document).ready(function () {
            $('#newsletter-subscribe-button').click(function () {
                
                var email = $("#newsletter-email").val();
                var subscribeProgress = $("#subscribe-loading-progress");
                subscribeProgress.show();
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.RouteUrl("SubscribeNewsletter"))",
                    data: { "email": email },
                    success: function (data) {
                        subscribeProgress.hide();
                        $("#newsletter-result-block").html(data.Result);
                         if (data.Success) {
                            $('#newsletter-subscribe-block').hide();
                            $('#newsletter-result-block').show();
                         }
                         else {
                            $('#newsletter-result-block').fadeIn("slow").delay(2000).fadeOut("slow");
                         }
                    },
                    error:function (xhr, ajaxOptions, thrownError){
                        alert('Failed to subscribe.');
                        subscribeProgress.hide();
                    }  
                });                
                return false;
            });
        });
    </script>